<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on Even - A super concise theme for Hugo</title>
    <link>https://rabbitlss.github.io/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 29 Aug 2020 00:10:23 +0800</lastBuildDate>
    
	<atom:link href="https://rabbitlss.github.io/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>查找算法2</title>
      <link>https://rabbitlss.github.io/post/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95_2/</link>
      <pubDate>Sat, 29 Aug 2020 00:10:23 +0800</pubDate>
      
      <guid>https://rabbitlss.github.io/post/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95_2/</guid>
      <description>1.两数之和 给定一个整数数组nums和一个目标值target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。 你可以假设每种</description>
    </item>
    
    <item>
      <title>查找算法</title>
      <link>https://rabbitlss.github.io/post/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 26 Aug 2020 00:10:23 +0800</pubDate>
      
      <guid>https://rabbitlss.github.io/post/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</guid>
      <description>查找的基本数据结构： 数值有无：set ，set没有重复值，没有顺序。 数值有相同的多个，有顺序：list 数值不允许重复，且有对应关系：dict，</description>
    </item>
    
    <item>
      <title>动态规划算法</title>
      <link>https://rabbitlss.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 23 Aug 2020 23:10:23 +0800</pubDate>
      
      <guid>https://rabbitlss.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/</guid>
      <description>动态规划常常适用于有重叠子问题和最优子结构性质的问题，动态规划方法所耗时间往往远少于朴素解法。 主要思想 若要解一个给定问题，我们需要解其不同部</description>
    </item>
    
    <item>
      <title>分治算法</title>
      <link>https://rabbitlss.github.io/post/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 19 Aug 2020 23:10:23 +0800</pubDate>
      
      <guid>https://rabbitlss.github.io/post/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/</guid>
      <description>​ 算法第一课：分治 ​ 分治的核心在于将复杂的问题递归的分为多个子问题求解（独立的，性质相同），先解决子问题，再把子问题合并起来解决原问题。 ​ 分</description>
    </item>
    
  </channel>
</rss>